// generated by Fast Light User Interface Designer (fluid) version 1.0110

#ifndef kvlAtlasParameterEstimationConsoleGUI_h
#define kvlAtlasParameterEstimationConsoleGUI_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include "kvlImageViewer.h"
#include <FL/Fl_Choice.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Progress.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Input.H>

class kvlAtlasParameterEstimationConsoleGUI {
public:
  kvlAtlasParameterEstimationConsoleGUI();
  Fl_Double_Window *m_Window;
private:
  void cb_m_Window_i(Fl_Double_Window*, void*);
  static void cb_m_Window(Fl_Double_Window*, void*);
public:
  kvl::ImageViewer *m_LabelImageViewer;
private:
  void cb_m_LabelImageViewer_i(kvl::ImageViewer*, void*);
  static void cb_m_LabelImageViewer(kvl::ImageViewer*, void*);
public:
  kvl::ImageViewer *m_AlphaImageViewer;
private:
  void cb_m_AlphaImageViewer_i(kvl::ImageViewer*, void*);
  static void cb_m_AlphaImageViewer(kvl::ImageViewer*, void*);
public:
  Fl_Choice *m_LabelImageNumber;
private:
  void cb_m_LabelImageNumber_i(Fl_Choice*, void*);
  static void cb_m_LabelImageNumber(Fl_Choice*, void*);
public:
  Fl_Value_Input *m_Size0;
private:
  void cb_m_Size0_i(Fl_Value_Input*, void*);
  static void cb_m_Size0(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *m_Size1;
private:
  void cb_m_Size1_i(Fl_Value_Input*, void*);
  static void cb_m_Size1(Fl_Value_Input*, void*);
  void cb_Go_i(Fl_Button*, void*);
  static void cb_Go(Fl_Button*, void*);
public:
  Fl_Check_Button *m_ShowMesh;
private:
  void cb_m_ShowMesh_i(Fl_Check_Button*, void*);
  static void cb_m_ShowMesh(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *m_ShowAlphasEstimationIterations;
  Fl_Progress *m_TotalProgress;
  Fl_Progress *m_SubProgress;
  Fl_Choice *m_LabelNumber;
private:
  void cb_m_LabelNumber_i(Fl_Choice*, void*);
  static void cb_m_LabelNumber(Fl_Choice*, void*);
public:
  Fl_Value_Input *m_InitialStiffness;
private:
  void cb_m_InitialStiffness_i(Fl_Value_Input*, void*);
  static void cb_m_InitialStiffness(Fl_Value_Input*, void*);
public:
  Fl_Check_Button *m_ShowGradient;
private:
  void cb_m_ShowGradient_i(Fl_Check_Button*, void*);
  static void cb_m_ShowGradient(Fl_Check_Button*, void*);
  void cb_Interrupt_i(Fl_Button*, void*);
  static void cb_Interrupt(Fl_Button*, void*);
  void cb_Step_i(Fl_Button*, void*);
  static void cb_Step(Fl_Button*, void*);
  void cb_Continue_i(Fl_Button*, void*);
  static void cb_Continue(Fl_Button*, void*);
public:
  Fl_Value_Input *m_PositionEstimationResolution;
private:
  void cb_m_PositionEstimationResolution_i(Fl_Value_Input*, void*);
  static void cb_m_PositionEstimationResolution(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *m_NumberOfUpsamplingSteps;
private:
  void cb_m_NumberOfUpsamplingSteps_i(Fl_Value_Input*, void*);
  static void cb_m_NumberOfUpsamplingSteps(Fl_Value_Input*, void*);
public:
  Fl_Value_Output *m_FinalSize0;
  Fl_Value_Output *m_FinalSize1;
  Fl_Input *m_ExplicitStartCollection;
private:
  void cb_m_ExplicitStartCollection_i(Fl_Input*, void*);
  static void cb_m_ExplicitStartCollection(Fl_Input*, void*);
public:
  Fl_Check_Button *m_UseExplicitStartCollection;
private:
  void cb_m_UseExplicitStartCollection_i(Fl_Check_Button*, void*);
  static void cb_m_UseExplicitStartCollection(Fl_Check_Button*, void*);
public:
  Fl_Value_Input *m_Size2;
private:
  void cb_m_Size2_i(Fl_Value_Input*, void*);
  static void cb_m_Size2(Fl_Value_Input*, void*);
public:
  Fl_Value_Output *m_FinalSize2;
  virtual ~kvlAtlasParameterEstimationConsoleGUI();
  virtual void DisplayLabelImage( unsigned int labelImageNumber );
  virtual void InitializeMesh();
  virtual void Estimate();
  virtual void SelectTriangleContainingPoint( float, float );
  virtual void Interrupt();
  virtual void Step();
  virtual void Continue();
  virtual void SetPositionEstimationResolution( unsigned int );
};
#endif
